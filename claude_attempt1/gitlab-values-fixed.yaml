global:
  hosts:
    domain: agrishakov.com
    https: true
  
  # Reference to the initial root password secret
  initialRootPassword:
    secret: gitlab-initial-root-password
    key: password
  
  # Required secrets for GitLab components
  gitaly:
    enabled: true
    authToken:
      secret: gitlab-gitaly-secret
      key: token
      
  shell:
    authToken:
      secret: gitlab-shell-secret
      key: secret
  
  rails:
    secret:
      secret: gitlab-rails-secret
  
  workhorse:
    secret:
      secret: gitlab-workhorse-secret
      key: shared-secret
      
  email:
    enabled: false
  
  # Connection details
  psql:
    password:
      secret: gitlab-postgresql-password
      key: password
  
  # Disable minio
  minio:
    enabled: false
  
  # Configure object storage settings - simplified for local storage
  appConfig:
    object_store:
      enabled: false
  
# PostgreSQL configuration
postgresql:
  install: true
  persistence:
    enabled: true
    existingClaim: postgresql-data
  postgresqlUsername: gitlab
  postgresqlPassword:
    secret: gitlab-postgresql-password
    key: postgres-password
  resources:
    requests:
      cpu: 300m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

# Redis configuration
redis:
  install: true
  password:
    enabled: true
    secret: gitlab-redis-password
    key: redis-password
  persistence:
    enabled: true
    existingClaim: redis-data
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

# Gitaly configuration
gitaly:
  persistence:
    enabled: true
    existingClaim: gitaly-data
  resources:
    requests:
      cpu: 800m
      memory: 2Gi
    limits:
      cpu: 4000m
      memory: 4Gi

# Registry configuration
registry:
  enabled: true
  storage:
    secret: gitlab-registry-storage
    key: storage

# Toolbox configuration
toolbox:
  init:
    image: {}
    resources: {}
    securityContext: {}
  securityContext: {}
  image: {}
  enabled: true

# Sidekiq configuration
gitlab-sidekiq:
  minReplicas: 1
  maxReplicas: 2
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  init:
    image: {}
    resources: {}
    securityContext: {}
  enabled: true

# Webservice configuration  
webservice:
  init:
    image: {}
    resources: {}
    securityContext: {}
  securityContext: {}
  image: {}
  enabled: true

# Prometheus configuration
prometheus:
  install: true
  server:
    persistentVolume:
      enabled: true
      existingClaim: prometheus-data
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

# Configure cert-manager
certmanager:
  install: true
  email: grishalmax@gmail.com

certmanager-issuer:
  email: grishalmax@gmail.com

# Nginx ingress configuration
nginx-ingress:
  enabled: true
  controller:
    config:
      use-forwarded-headers: "true"
  service:
    type: NodePort
    externalIPs:
      - 75.80.52.243  # From your ingress-patch.yaml
